name: Release
on:
  workflow_dispatch:
    inputs:
      version:
        type: string
        description: Version to release
        required: true
  push:
    branches: [ main, v2.0 ]
  pull_request:
    branches: [ main, v2.0 ]
    # tags:        
    # - "*.*.*"



jobs:
  build_binaries:
    strategy:
        matrix:
          include:
            - os: ubuntu-18.04
              extension: so
              target: x86_64-unknown-linux-gnu
              code-target: linux-x64
            - os: macos-11
              extension: dylib
              target: x86_64-apple-darwin
              code-target: darwin-x64
            - os: macos-11
              extension: dylib
              target: aarch64-apple-darwin
              code-target: darwin-arm64    
    runs-on: ${{matrix.os}}
    steps:  
    - uses: actions/checkout@v2
    - uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: nightly
        target: ${{matrix.target}}
    - uses: Swatinem/rust-cache@v1
    - name: build mirrord-layer and cli
      run: cargo +nightly build --release -p mirrord -p mirrord-layer --target=${{matrix.target}}
    - name: for debug
      run: find .
    - uses: actions/upload-artifact@v3
      with:
        name: ${{matrix.target}}
        path: |
          target/${{matrix.target}}/release/mirrord
          target/${{matrix.target}}/release/libmirrord_layer.${{matrix.extension}}
        if-no-files-found: error

  # build_docker_image:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v2
  #     - name: Set up QEMU
  #       uses: docker/setup-qemu-action@v2
  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v2
  #     - name: Login to GitHub Container Registry
  #       uses: docker/login-action@v2
  #       with:
  #         registry: ghcr.io
  #         username: ${{ github.repository_owner }}
  #         password: ${{ secrets.GITHUB_TOKEN }}
  #     - name: Get release version
  #       run: |
  #         echo "::set-output name=version::$(grep -m 1 version Cargo.toml | cut -d' ' -f3 | tr -d '\"')"
  #       id: version
  #     - name: Build and push
  #       uses: docker/build-push-action@v3
  #       with:
  #         context: .
  #         platforms: linux/amd64,linux/arm64
  #         push: true
  #         tags: |
  #           ghcr.io/metalbear-co/mirrord:latest
  #           ghcr.io/metalbear-co/mirrord:${{ steps.version.outputs.version }}
  # # add publish docker image
  # release_vscode_ext:
  #   needs: build_binaries
  #   runs-on: ubuntu-latest
  #   steps:
  #   # This downloads all artifacts of the build
  #   - uses: actions/download-artifact@v3
  #     with:
  #       path: artifacts
  #   - run: npm install -g vsce typescript esbuild
  #   - run: mv target/release/libmirrord_layer.${{matrix.extension}} vscode-ext/
  #   - run: cd vscode-ext && npm install && tsc && vsce publish  {{github.event.inputs.version}} --allow-star-activation --target ${{matrix.code-target}} --pre-release
  #     env:
  #       VSCE_PAT: ${{ secrets.VSCE_PAT }}
